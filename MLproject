# Author: Luis Kuhn Cuellar
# Email: luis.kuhn@gmail.com
# Version: 0.1.0-SNAPSHOT
# License: MIT


name: biomedical_image_segmentation

# conda_env: environment.yml
docker_env:
  image: ghcr.io/luiskuhn/biomedical_image_segmentation:0.1.0-SNAPSHOT
  volumes: ["${PWD}/data:/data"]

entry_points:
  main:
    parameters:
      cuda: {type: string, default: 'True'}
      epochs: {type: int, default: 5}
      general-seed: {type: int, default: 0}
      pytorch-seed: {type: int, default: 0}
      training-batch-size: {type: int, default: 8}
      test-batch-size: {type: int, default: 8}
      learning-rate: {type: float, default: 0.0001}
      lr-step-size: {type: int, default: 10000}
      lr-gamma: {type: float, default: 0.1}
      class-weights: {type: string, default: '0.2, 1.0, 2.5'}
      test-percent: {type: float, default: 0.15}
      test-epochs: {type: int, default: 10}
      dataset-path: {type: string, default: '/mnt/datasets/lits/ds/'}
      checkpoint-path: {type: string, default: 'checkpoints/'}
      dataset-size: {type: int, default: 4}
      n-channels: {type: int, default: 1}
      n-class: {type: int, default: 3}
      dropout-rate: {type: float, default: 0.25}      
    command: |
          python biomedical_image_segmentation/biomedical_image_segmentation.py \
            --cuda {cuda} \
            --epochs {epochs} \
            --general-seed {general-seed} \
            --pytorch-seed {pytorch-seed} \
            --training-batch-size {training-batch-size} \
            --test-batch-size {test-batch-size} \
            --learning-rate {learning-rate} \
            --lr-step-size {lr-step-size} \
            --lr-gamma {lr-gamma} \
            --class-weights {class-weights} \
            --test-percent {test-percent} \
            --test-epochs {test-epochs} \
            --dataset-path {dataset-path} \
            --checkpoint-path {checkpoint-path} \
            --dataset-size {dataset-size} \
            --n-channels {n-channels} \
            --n-class {n-class} \
            --dropout-rate {dropout-rate}
